{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steff\\\\OneDrive\\\\Documents\\\\ICT_Academy_Kerala\\\\MERNAssignment_BLOGAPP\\\\blogappfrontend\\\\src\\\\component\\\\signUp\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Login from './Login';\nimport './SignUp.css';\nimport validation from './Validation';\nimport MyForm from '../reading/Reading';\nimport Home from '../home/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  //Storing form values\n  var [formValues, setFormValues] = MyForm({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }); //Manage Form Error Values\n\n  const [formErrorValues, setFormErrorValues] = useState({}); //Flag for form submission Status\n\n  const [isSubmit, setIsSubmit] = useState(false); // const handleSignup = (event)=>{\n  //     //Destructuring:Technique to get specific values \n  //     const{name,value} = event.target;\n  //     setFormValues({...formValues,[name]:value});\n  // }\n  //Manage Form Refresh\n\n  function handleSignUpSubmit(event) {\n    event.preventDefault();\n    setFormErrorValues(validation(formValues));\n    setIsSubmit(true); // const username = formValues.username;\n    // const email = formValues.email;\n    // const password = formValues.password;\n    // const response = await fetch('http://localhost:6000/api/signup',{\n    //     method:'post',\n    //     body:JSON.stringify({username,email,password}),\n    //     headers:{\n    //         'Content-Type':'application/json'\n    //     }\n    // })\n\n    axios.post(\"http://localhost:5001/api/signup\", formValues).then(response => {\n      console.log(response);\n    });\n  }\n\n  ;\n  useEffect(() => {\n    if (Object.keys(formErrorValues).length === 0 && isSubmit) {\n      alert;\n    } // Object.keys(formErrorValues).length === 0 && isSubmit ? (<Login />) :(<Home />)\n\n  }, [formErrorValues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signupbody\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"chk\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSignUpSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            \"aria-hidden\": \"true\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"User name\",\n            required: \"\",\n            value: formValues.username,\n            onChange: setFormValues\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errors\",\n            children: formErrorValues.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            required: \"\",\n            value: formValues.email,\n            onChange: setFormValues\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errors\",\n            children: formErrorValues.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            required: \"\",\n            value: formValues.password,\n            onChange: setFormValues\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errors\",\n            children: formErrorValues.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 6\n  }, this);\n};\n\n_s(SignUp, \"JoA8xst4SlNU9NCQUh/toLg/j5s=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Steff/OneDrive/Documents/ICT_Academy_Kerala/MERNAssignment_BLOGAPP/blogappfrontend/src/component/signUp/SignUp.js"],"names":["React","useEffect","useState","axios","Login","validation","MyForm","Home","SignUp","formValues","setFormValues","username","email","password","formErrorValues","setFormErrorValues","isSubmit","setIsSubmit","handleSignUpSubmit","event","preventDefault","post","then","response","console","log","Object","keys","length","alert"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Login from './Login';\r\nimport './SignUp.css';\r\nimport validation from './Validation';\r\nimport MyForm from '../reading/Reading';\r\nimport Home from '../home/Home';\r\n\r\n\r\nconst SignUp = () => {\r\n    \r\n//Storing form values\r\n    var [formValues,setFormValues] = MyForm({username:\"\",email:\"\",password:\"\"});\r\n\r\n    //Manage Form Error Values\r\n    const [formErrorValues,setFormErrorValues]= useState({});\r\n\r\n    //Flag for form submission Status\r\n    const [isSubmit,setIsSubmit] = useState(false);\r\n\r\n\r\n    // const handleSignup = (event)=>{\r\n    //     //Destructuring:Technique to get specific values \r\n    //     const{name,value} = event.target;\r\n    //     setFormValues({...formValues,[name]:value});\r\n    // }\r\n    //Manage Form Refresh\r\n    function handleSignUpSubmit (event){\r\n        event.preventDefault();\r\n        setFormErrorValues(validation(formValues));\r\n        setIsSubmit(true);\r\n        // const username = formValues.username;\r\n        // const email = formValues.email;\r\n        // const password = formValues.password;\r\n      \r\n        \r\n        // const response = await fetch('http://localhost:6000/api/signup',{\r\n        //     method:'post',\r\n        //     body:JSON.stringify({username,email,password}),\r\n        //     headers:{\r\n        //         'Content-Type':'application/json'\r\n        //     }\r\n        // })\r\n        axios.post(\"http://localhost:5001/api/signup\",formValues).then(\r\n            (response)=>{\r\n                console.log(response);\r\n            }\r\n        )\r\n    };\r\n\r\n    useEffect(()=>{\r\n                if(Object.keys(formErrorValues).length === 0 && isSubmit){\r\n                    \r\n                        alert\r\n                \r\n                  }\r\n                // Object.keys(formErrorValues).length === 0 && isSubmit ? (<Login />) :(<Home />)\r\n                 }\r\n\r\n             ,[formErrorValues]);\r\n\r\n    return (\r\n     <div className='signupbody'>\r\n         <div className=\"main\">  \t\r\n\t\t<input type=\"checkbox\" id=\"chk\" aria-hidden=\"true\" />\r\n        {/* {Object.keys(formErrorValues).length === 0 && isSubmit ? (<Login />) :(<pre-text>{JSON.stringify(formValues,undefined,2)}</pre-text>)} */}\r\n\t\t\t<div className=\"signup\">\r\n\t\t\t\t<form onSubmit={handleSignUpSubmit}>\r\n\t\t\t\t\t<label  aria-hidden=\"true\">Sign up</label>\r\n\t\t\t\t\t<input type=\"text\" name=\"username\" placeholder=\"User name\" required=\"\" value={formValues.username} onChange={setFormValues} />\r\n                    <p className='errors'>{formErrorValues.username}</p>\r\n\t\t\t\t\t<input type=\"email\" name=\"email\" placeholder=\"Email\" required=\"\" value={formValues.email} onChange={setFormValues} />\r\n                    <p className='errors'>{formErrorValues.email}</p>\r\n\t\t\t\t\t<input type=\"password\" name=\"password\" placeholder=\"Password\" required=\"\" value={formValues.password} onChange={setFormValues} />\r\n                    <p className='errors'>{formErrorValues.password}</p>\r\n\t\t\t\t\t<button >Sign up</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\r\n\t\t\r\n\t</div>\r\n\r\n     </div>  \r\n    \r\n        \r\n    );\r\n};\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}