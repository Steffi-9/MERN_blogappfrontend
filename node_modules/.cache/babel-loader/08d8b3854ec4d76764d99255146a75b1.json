{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steff\\\\OneDrive\\\\Documents\\\\ICT_Academy_Kerala\\\\MERNAssignment_BLOGAPP\\\\blogappfrontend\\\\src\\\\component\\\\signUp\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Login from './Login';\nimport './SignUp.css';\nimport validation from './Validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  //Storing form values\n  const [formValues, setFormValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }); //Manage Form Error Values\n\n  const [formErrorValues, setFormErrorValues] = useState({}); //Flag for form submission Status\n\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleSignup = event => {\n    //Destructuring:Technique to get specific values \n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  }; //Manage Form Refresh\n\n\n  async function handleSignUpSubmit(event) {\n    event.preventDefault();\n    setFormErrorValues(validation(formValues));\n    setIsSubmit(true);\n    const username = formValues.username;\n    const email = formValues.username;\n    const response = await fetch(`http://localhost:5000/api/article/${name}/comments`, {\n      method: 'post',\n      body: JSON.stringify({\n        username,\n        text\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  ;\n  useEffect(() => {\n    if (Object.keys(formErrorValues).length === 0 && isSubmit) {}\n  }, [formErrorValues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signupbody\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"chk\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 3\n      }, this), Object.keys(formErrorValues).length === 0 && isSubmit ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 67\n      }, this) : /*#__PURE__*/_jsxDEV(\"pre-text\", {\n        children: JSON.stringify(formValues, undefined, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 80\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSignUpSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"chk\",\n            \"aria-hidden\": \"true\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"User name\",\n            required: \"\",\n            value: formValues.username,\n            onChange: handleSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errors\",\n            children: formErrorValues.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            required: \"\",\n            value: formValues.email,\n            onChange: handleSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errors\",\n            children: formErrorValues.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            required: \"\",\n            value: formValues.password,\n            onChange: handleSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errors\",\n            children: formErrorValues.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 6\n  }, this);\n};\n\n_s(SignUp, \"ZXv74DKMmO6J+oNZDkb/INZDurs=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Steff/OneDrive/Documents/ICT_Academy_Kerala/MERNAssignment_BLOGAPP/blogappfrontend/src/component/signUp/SignUp.js"],"names":["React","useEffect","useState","Login","validation","SignUp","formValues","setFormValues","username","email","password","formErrorValues","setFormErrorValues","isSubmit","setIsSubmit","handleSignup","event","name","value","target","handleSignUpSubmit","preventDefault","response","fetch","method","body","JSON","stringify","text","headers","Object","keys","length","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAErB;AACI,QAAK,CAACC,UAAD,EAAYC,aAAZ,IAA6BL,QAAQ,CAAC;AAACM,IAAAA,QAAQ,EAAC,EAAV;AAAaC,IAAAA,KAAK,EAAC,EAAnB;AAAsBC,IAAAA,QAAQ,EAAC;AAA/B,GAAD,CAA1C,CAHiB,CAKjB;;AACA,QAAM,CAACC,eAAD,EAAiBC,kBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD,CANiB,CAQjB;;AACA,QAAM,CAACW,QAAD,EAAUC,WAAV,IAAyBZ,QAAQ,CAAC,KAAD,CAAvC;;AAGA,QAAMa,YAAY,GAAIC,KAAD,IAAS;AAC1B;AACA,UAAK;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAeF,KAAK,CAACG,MAA1B;AACAZ,IAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAe,OAACW,IAAD,GAAOC;AAAtB,KAAD,CAAb;AACH,GAJD,CAZiB,CAiBjB;;;AACD,iBAAeE,kBAAf,CAAmCJ,KAAnC,EAAyC;AACpCA,IAAAA,KAAK,CAACK,cAAN;AACAT,IAAAA,kBAAkB,CAACR,UAAU,CAACE,UAAD,CAAX,CAAlB;AACAQ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,UAAMN,QAAQ,GAAGF,UAAU,CAACE,QAA5B;AACA,UAAMC,KAAK,GAAGH,UAAU,CAACE,QAAzB;AAEA,UAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCN,IAAK,WAA3C,EAAsD;AAC9EO,MAAAA,MAAM,EAAC,MADuE;AAE9EC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACnB,QAAAA,QAAD;AAAUoB,QAAAA;AAAV,OAAf,CAFyE;AAG9EC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AAHsE,KAAtD,CAA5B;AAOH;;AAAA;AAED5B,EAAAA,SAAS,CAAC,MAAI;AACF,QAAG6B,MAAM,CAACC,IAAP,CAAYpB,eAAZ,EAA6BqB,MAA7B,KAAwC,CAAxC,IAA6CnB,QAAhD,EAAyD,CAEtD;AACD,GAJL,EAMC,CAACF,eAAD,CAND,CAAT;AAQA,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACP;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,EAAE,EAAC,KAA1B;AAAgC,uBAAY;AAA5C;AAAA;AAAA;AAAA;AAAA,cADO,EAEAmB,MAAM,CAACC,IAAP,CAAYpB,eAAZ,EAA6BqB,MAA7B,KAAwC,CAAxC,IAA6CnB,QAA7C,gBAAyD,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAzD,gBAAsE;AAAA,kBAAWa,IAAI,CAACC,SAAL,CAAerB,UAAf,EAA0B2B,SAA1B,EAAoC,CAApC;AAAX;AAAA;AAAA;AAAA;AAAA,cAFtE,eAGN;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACC;AAAM,UAAA,QAAQ,EAAEb,kBAAhB;AAAA,kCACC;AAAO,YAAA,GAAG,EAAC,KAAX;AAAiB,2BAAY,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,UAAxB;AAAmC,YAAA,WAAW,EAAC,WAA/C;AAA2D,YAAA,QAAQ,EAAC,EAApE;AAAuE,YAAA,KAAK,EAAEd,UAAU,CAACE,QAAzF;AAAmG,YAAA,QAAQ,EAAEO;AAA7G;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGgB;AAAG,YAAA,SAAS,EAAC,QAAb;AAAA,sBAAuBJ,eAAe,CAACH;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAHhB,eAIC;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAC,OAAzB;AAAiC,YAAA,WAAW,EAAC,OAA7C;AAAqD,YAAA,QAAQ,EAAC,EAA9D;AAAiE,YAAA,KAAK,EAAEF,UAAU,CAACG,KAAnF;AAA0F,YAAA,QAAQ,EAAEM;AAApG;AAAA;AAAA;AAAA;AAAA,kBAJD,eAKgB;AAAG,YAAA,SAAS,EAAC,QAAb;AAAA,sBAAuBJ,eAAe,CAACF;AAAvC;AAAA;AAAA;AAAA;AAAA,kBALhB,eAMC;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,IAAI,EAAC,UAA5B;AAAuC,YAAA,WAAW,EAAC,UAAnD;AAA8D,YAAA,QAAQ,EAAC,EAAvE;AAA0E,YAAA,KAAK,EAAEH,UAAU,CAACI,QAA5F;AAAsG,YAAA,QAAQ,EAAEK;AAAhH;AAAA;AAAA;AAAA;AAAA,kBAND,eAOgB;AAAG,YAAA,SAAS,EAAC,QAAb;AAAA,sBAAuBJ,eAAe,CAACD;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAPhB,eAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADD;AAyBH,CAnED;;GAAML,M;;KAAAA,M;AAqEN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Login from './Login';\r\nimport './SignUp.css';\r\nimport validation from './Validation';\r\n\r\nconst SignUp = () => {\r\n    \r\n//Storing form values\r\n    const[formValues,setFormValues] = useState({username:\"\",email:\"\",password:\"\"});\r\n\r\n    //Manage Form Error Values\r\n    const [formErrorValues,setFormErrorValues]= useState({});\r\n\r\n    //Flag for form submission Status\r\n    const [isSubmit,setIsSubmit] = useState(false);\r\n\r\n\r\n    const handleSignup = (event)=>{\r\n        //Destructuring:Technique to get specific values \r\n        const{name,value} = event.target;\r\n        setFormValues({...formValues,[name]:value});\r\n    }\r\n    //Manage Form Refresh\r\n   async function handleSignUpSubmit (event){\r\n        event.preventDefault();\r\n        setFormErrorValues(validation(formValues));\r\n        setIsSubmit(true);\r\n        const username = formValues.username;\r\n        const email = formValues.username;\r\n        \r\n        const response = await fetch(`http://localhost:5000/api/article/${name}/comments`,{\r\n            method:'post',\r\n            body:JSON.stringify({username,text}),\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        })\r\n    };\r\n\r\n    useEffect(()=>{\r\n                if(Object.keys(formErrorValues).length === 0 && isSubmit){\r\n\r\n                  }\r\n                 }\r\n\r\n             ,[formErrorValues]);\r\n\r\n    return (\r\n     <div className='signupbody'>\r\n         <div className=\"main\">  \t\r\n\t\t<input type=\"checkbox\" id=\"chk\" aria-hidden=\"true\" />\r\n        {Object.keys(formErrorValues).length === 0 && isSubmit ? (<Login />) :(<pre-text>{JSON.stringify(formValues,undefined,2)}</pre-text>)}\r\n\t\t\t<div className=\"signup\">\r\n\t\t\t\t<form onSubmit={handleSignUpSubmit}>\r\n\t\t\t\t\t<label for=\"chk\" aria-hidden=\"true\">Sign up</label>\r\n\t\t\t\t\t<input type=\"text\" name=\"username\" placeholder=\"User name\" required=\"\" value={formValues.username} onChange={handleSignup} />\r\n                    <p className='errors'>{formErrorValues.username}</p>\r\n\t\t\t\t\t<input type=\"email\" name=\"email\" placeholder=\"Email\" required=\"\" value={formValues.email} onChange={handleSignup} />\r\n                    <p className='errors'>{formErrorValues.email}</p>\r\n\t\t\t\t\t<input type=\"password\" name=\"password\" placeholder=\"Password\" required=\"\" value={formValues.password} onChange={handleSignup} />\r\n                    <p className='errors'>{formErrorValues.password}</p>\r\n\t\t\t\t\t<button >Sign up</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\r\n\t\t\r\n\t</div>\r\n\r\n     </div>  \r\n    \r\n        \r\n    );\r\n};\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}